üîÅ What is a Proxy?
A proxy is a server that acts as an intermediary between a client (e.g., browser) and another server (e.g., your backend app).

üîÑ Types of Proxies:
1. Forward Proxy
Client ‚Üí Proxy ‚Üí Internet

Used for content filtering, caching, anonymity (mostly for outbound traffic)

2. Reverse Proxy (what you're using with NGINX)
Client ‚Üí NGINX (Reverse Proxy) ‚Üí Backend App

Clients don‚Äôt talk to backend directly ‚Äî NGINX forwards the request.

üõ° Why Use a Reverse Proxy?
Purpose	Description
Load Balancing	Distribute traffic across multiple servers
SSL Termination	Handle HTTPS at the proxy, backend uses HTTP
Security	Hide backend services, rate limit, firewall
Routing	Serve different apps/domains from one IP
Caching	Improve speed by caching responses

üîß How Reverse Proxy Works in Your NGINX Setup:
From your image:

nginx
Copy
Edit
server {
    listen 80;
    server_name clothesapp.100xdevs.com;

    location / {
        proxy_pass http://localhost:8080;
        ...
    }
}
This means:
When someone visits clothesapp.100xdevs.com,

NGINX catches the request on port 80,

Forwards it internally to localhost:8080,

Then returns the response back to the browser.




What is a Reverse Proxy?
A reverse proxy forwards client requests to backend servers and returns the response. NGINX is widely used for this to handle multiple apps on the same server using domain names.

üì¶ Step-by-Step: Setup NGINX Reverse Proxy on Ubuntu
1. Update Packages
bash
Copy
Edit
sudo apt update && sudo apt upgrade -y
2. Install NGINX
bash
Copy
Edit
sudo apt install nginx -y
3. Enable and Start NGINX
bash
Copy
Edit
sudo systemctl enable nginx
sudo systemctl start nginx
4. Create NGINX Config File
For example, proxy two apps:

clothesapp.100xdevs.com ‚Üí localhost:8080

shoesapp.100xdevs.com ‚Üí (Assume) localhost:8081

Edit or create file:

bash
Copy
Edit
sudo nano /etc/nginx/sites-available/reverse-proxy.conf
Paste this:

nginx
Copy
Edit
server {
    listen 80;
    server_name clothesapp.100xdevs.com;

    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    listen 80;
    server_name shoesapp.100xdevs.com;

    location / {
        proxy_pass http://localhost:8081;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
5. Enable the Configuration
bash
Copy
Edit
sudo ln -s /etc/nginx/sites-available/reverse-proxy.conf /etc/nginx/sites-enabled/
6. Test Configuration
bash
Copy
Edit
sudo nginx -t
7. Reload NGINX
bash
Copy
Edit
sudo systemctl reload nginx
8. Update DNS or /etc/hosts (for local testing)
bash
Copy
Edit
sudo nano /etc/hosts
Add:

Copy
Edit
127.0.0.1 clothesapp.100xdevs.com
127.0.0.1 shoesapp.100xdevs.com
‚úÖ Final Notes
Make sure backend servers (on ports 8080, 8081) are running.

To secure the domains, add HTTPS via Let's Encrypt + Certbot.